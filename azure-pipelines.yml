# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- Petclinic

pool:
  name: vm-azure 

steps:

# task: AzureCLI@2
  #displayName: login to AzureCLI
  #inputs:
    #azureSubscription: 'azure-cli-2022-04-01-09-22-56'
    #scriptType: 'bash'
    #scriptLocation: 'inlineScript'
    #inlineScript: 'az account show'

- task: TerraformCLI@0
  displayName: Terraform Init
  inputs:
    command: 'init'
    workingDirectory: 'petclinic_maven/provisioning/Terraform'
    allowTelemetryCollection: true
- task: TerraformCLI@0
  displayName: Terraform Validate
  inputs:
    command: 'validate'
    allowTelemetryCollection: true

- task: TerraformCLI@0
  displayName: Terraform Plan
  inputs:
    command: 'plan'
    environmentServiceName: 'azure-cli-2022-04-01-09-22-56'
    providerAzureRmSubscriptionId: '41e50375-b926-4bc4-9045-348f359cf721'
    #runAzLogin: true
    commandOptions: -lock=false
    allowTelemetryCollection: true
    #publishPlanResults: 'tfplan'
    workingDirectory: 'petclinic_maven/provisioning/Terraform'

- task: TerraformCLI@0
  displayName: Terraform Apply
  inputs:
    command: 'apply'
    commandOptions: -lock=false
    workingDirectory: 'petclinic_maven/provisioning/Terraform'
    environmentServiceName: 'azure-cli-2022-04-01-09-22-56'
    providerAzureRmSubscriptionId: '41e50375-b926-4bc4-9045-348f359cf721'
    #runAzLogin: true
    allowTelemetryCollection: true

- task: Bash@3
  displayName: write out private key
  inputs:
    targetType: 'inline'
    script: 'terraform output -raw tls_private_key > ~/VMTest_rsa_key.pem && echo "write succesfull" && sudo chmod 600 ~/VMTest_rsa_key.pem'
    workingDirectory: 'petclinic_maven/provisioning/Terraform'

- task: Bash@3
  displayName: Store public IP of testVM in VMTest_public_IP
  inputs:
    targetType: inline
    script: terraform output -raw public_ip_address > ~/VMTest_public_IP
    workingDirectory: 'petclinic_maven/provisioning/Terraform'


- task: Bash@3
  displayName: present rsa key to authorized keys file of the testing environment, install some ansible dependencies
  inputs:
        targetType: 'inline'
        script: ansible-galaxy collection install community.docker && ansible-galaxy collection install ansible.posix && ansible-playbook add-key.yml --key-file=~/VMTest_rsa_key.pem -i ~/VMTest_public_IP
        workingDirectory: 'petclinic_maven/provisioning/Ansible'


#- task: Bash@3
  #displayName: Install ansible and terraform
  #inputs:
    #workingDirectory: 'petclinic_maven/provisioning/Ansible'
    #targetType: inline
    #script: ansible-playbook ansible-terraform-install.yml

- task: Bash@3
  displayName: Install Docker & login & pull dockerimage
  inputs:
    workingDirectory: 'petclinic_maven/provisioning/Ansible'
    targetType: inline
    script: ansible-playbook Docker-install.yml -i ~/VMTest_public_IP

- task: Bash@3
  displayName: Start container
  inputs:
   workingDirectory: 'petclinic_maven/provisioning/Ansible'
   targetType: inline
   script: ansible-playbook Start-container.yml -i ~/VMTest_public_IP

- task: Bash@3
  displayName: execute-JMeter-test
  inputs:
    targetType: 'inline'
    workingDirectory: /opt/apache-jmeter-5.4.1/bin/
    script: |
      ./jmeter.sh -n -t /home/azureuser/myagent/_work/4/s/petclinic_maven/provisioning/TestPro.jmx -Jhost=$(cat ~/VMTest_public_IP ) -l /home/azureuser/myagent/_work/4/s/petclinic_maven/provisioning/testresults.jtl
- task: Bash@3
  displayName: execute push
  inputs:
    targetType: 'inline'
    workingDirectory: /home/azureuser/myagent/_work/4/s/petclinic_maven/provisioning
    script: |
            git pull git@github.com:Juan8295/Provisioning.git
            git checkout test
            git add testresults.jtl
            git commit -m "push" 
            git push git@github.com:Juan8295/Provisioning.git HEAD:Petclinic

- task: Bash@3
  displayName: Selenium-test
  inputs:
   targetType: 'inline'
   workingDirectory: /home/azureuser/myagent/_work/4/s/petclinic_maven/provisioning
   script: 
     pip install selenium ;
     python3 Selenium-test.py

- task: Bash@3
  displayName: stop docker container
  inputs:
    targetType: 'inline'
    workingDirectory: 'petclinic_maven/provisioning/Ansible'
    script: ansible-playbook Stop-container.yml -i ~/VMTest_public_IP

- task: TerraformCLI@0
  inputs:
    command: 'destroy'
    workingDirectory: 'petclinic_maven/provisioning/Terraform'
    commandOptions: -lock=false
    environmentServiceName: 'azure-cli-2022-04-01-09-22-56'
    providerAzureRmSubscriptionId: '41e50375-b926-4bc4-9045-348f359cf721'
    allowTelemetryCollection: true

#- task: Bash@3
  #displayName: docker login
  #inputs:
    #targetType: 'inline'
    #script: sudo docker login -u "juan8295" -p $(DOCKERPASSW) docker.io

#- task: Bash@3
  #displayName: pull dockerimage
  #inputs:
    #targetType: 'inline'
    #script: sudo docker pull juan8295/clinic_tomcat:1.0